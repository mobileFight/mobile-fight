[{"/Users/dmitryshelomanov/mobile-fight/src/index.tsx":"1","/Users/dmitryshelomanov/mobile-fight/src/serviceWorker.ts":"2","/Users/dmitryshelomanov/mobile-fight/src/app.tsx":"3","/Users/dmitryshelomanov/mobile-fight/src/lib/histories.tsx":"4","/Users/dmitryshelomanov/mobile-fight/src/global-styles.ts":"5","/Users/dmitryshelomanov/mobile-fight/src/lib/theme-context.tsx":"6","/Users/dmitryshelomanov/mobile-fight/src/lib/custom-navigation-behavior.tsx":"7","/Users/dmitryshelomanov/mobile-fight/src/ui/organisms/index.ts":"8","/Users/dmitryshelomanov/mobile-fight/src/ui/themes/index.ts":"9","/Users/dmitryshelomanov/mobile-fight/src/pages/index.tsx":"10","/Users/dmitryshelomanov/mobile-fight/src/ui/themes/light.ts":"11","/Users/dmitryshelomanov/mobile-fight/src/ui/organisms/modal.tsx":"12","/Users/dmitryshelomanov/mobile-fight/src/ui/organisms/menu.tsx":"13","/Users/dmitryshelomanov/mobile-fight/src/pages/chat/page.tsx":"14","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/duel/page.tsx":"15","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/market/page.tsx":"16","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/hunting/page.tsx":"17","/Users/dmitryshelomanov/mobile-fight/src/pages/join/login/page.tsx":"18","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/location/page.tsx":"19","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/market/products/page.tsx":"20","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/quests-list/page.tsx":"21","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/equipment/page.tsx":"22","/Users/dmitryshelomanov/mobile-fight/src/lib/styled-component-layout.tsx":"23","/Users/dmitryshelomanov/mobile-fight/src/ui/templates/index.ts":"24","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/index.ts":"25","/Users/dmitryshelomanov/mobile-fight/src/features/chat/index.ts":"26","/Users/dmitryshelomanov/mobile-fight/src/features/arena/index.ts":"27","/Users/dmitryshelomanov/mobile-fight/src/features/common/index.ts":"28","/Users/dmitryshelomanov/mobile-fight/src/ui/templates/main-template.tsx":"29","/Users/dmitryshelomanov/mobile-fight/src/ui/templates/container.tsx":"30","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/button.tsx":"31","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/timer.tsx":"32","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/footer.tsx":"33","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/icons.tsx":"34","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/titles.tsx":"35","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/input.tsx":"36","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/separator.tsx":"37","/Users/dmitryshelomanov/mobile-fight/src/features/arena/organisms/index.ts":"38","/Users/dmitryshelomanov/mobile-fight/src/features/chat/organisms/index.ts":"39","/Users/dmitryshelomanov/mobile-fight/src/features/common/organisms/index.ts":"40","/Users/dmitryshelomanov/mobile-fight/src/features/arena/atoms/index.tsx":"41","/Users/dmitryshelomanov/mobile-fight/src/features/arena/organisms/footer.tsx":"42","/Users/dmitryshelomanov/mobile-fight/src/features/arena/organisms/location-preview.tsx":"43","/Users/dmitryshelomanov/mobile-fight/src/features/common/organisms/list.tsx":"44","/Users/dmitryshelomanov/mobile-fight/src/features/chat/organisms/message.tsx":"45","/Users/dmitryshelomanov/mobile-fight/src/features/arena/atoms/scroll.tsx":"46"},{"size":808,"mtime":1610235893110,"results":"47","hashOfConfig":"48"},{"size":4954,"mtime":1610150274729,"results":"49","hashOfConfig":"48"},{"size":805,"mtime":1610235861321,"results":"50","hashOfConfig":"48"},{"size":2313,"mtime":1610236182701,"results":"51","hashOfConfig":"48"},{"size":348,"mtime":1610231847651,"results":"52","hashOfConfig":"48"},{"size":1044,"mtime":1610150100803,"results":"53","hashOfConfig":"48"},{"size":1555,"mtime":1610236068062,"results":"54","hashOfConfig":"48"},{"size":47,"mtime":1610137679540,"results":"55","hashOfConfig":"48"},{"size":24,"mtime":1610136963764,"results":"56","hashOfConfig":"48"},{"size":1555,"mtime":1610235942254,"results":"57","hashOfConfig":"48"},{"size":509,"mtime":1610230653800,"results":"58","hashOfConfig":"48"},{"size":1381,"mtime":1610149015875,"results":"59","hashOfConfig":"48"},{"size":552,"mtime":1610137858307,"results":"60","hashOfConfig":"48"},{"size":2713,"mtime":1610232902690,"results":"61","hashOfConfig":"48"},{"size":841,"mtime":1610230679895,"results":"62","hashOfConfig":"48"},{"size":1059,"mtime":1610232806813,"results":"63","hashOfConfig":"48"},{"size":1707,"mtime":1610230723569,"results":"64","hashOfConfig":"48"},{"size":89,"mtime":1610148684632,"results":"65","hashOfConfig":"48"},{"size":3994,"mtime":1610230468666,"results":"66","hashOfConfig":"48"},{"size":2418,"mtime":1610230740771,"results":"67","hashOfConfig":"48"},{"size":2238,"mtime":1610230601251,"results":"68","hashOfConfig":"48"},{"size":4334,"mtime":1610232779753,"results":"69","hashOfConfig":"48"},{"size":1239,"mtime":1610150033458,"results":"70","hashOfConfig":"48"},{"size":60,"mtime":1610138455809,"results":"71","hashOfConfig":"48"},{"size":175,"mtime":1610137604964,"results":"72","hashOfConfig":"48"},{"size":28,"mtime":1610149062551,"results":"73","hashOfConfig":"48"},{"size":52,"mtime":1610148695710,"results":"74","hashOfConfig":"48"},{"size":28,"mtime":1610149133689,"results":"75","hashOfConfig":"48"},{"size":1023,"mtime":1610138721359,"results":"76","hashOfConfig":"48"},{"size":738,"mtime":1610233101476,"results":"77","hashOfConfig":"48"},{"size":1404,"mtime":1610137422686,"results":"78","hashOfConfig":"48"},{"size":450,"mtime":1610139182764,"results":"79","hashOfConfig":"48"},{"size":1052,"mtime":1610148731724,"results":"80","hashOfConfig":"48"},{"size":1703,"mtime":1610137591734,"results":"81","hashOfConfig":"48"},{"size":302,"mtime":1610137642071,"results":"82","hashOfConfig":"48"},{"size":293,"mtime":1610137611172,"results":"83","hashOfConfig":"48"},{"size":185,"mtime":1610137626708,"results":"84","hashOfConfig":"48"},{"size":60,"mtime":1610148703303,"results":"85","hashOfConfig":"48"},{"size":26,"mtime":1610149049050,"results":"86","hashOfConfig":"48"},{"size":23,"mtime":1610149085694,"results":"87","hashOfConfig":"48"},{"size":25,"mtime":1610126741142,"results":"88","hashOfConfig":"48"},{"size":1784,"mtime":1610233488180,"results":"89","hashOfConfig":"48"},{"size":1192,"mtime":1610149036352,"results":"90","hashOfConfig":"48"},{"size":582,"mtime":1610230544878,"results":"91","hashOfConfig":"48"},{"size":817,"mtime":1610149055826,"results":"92","hashOfConfig":"48"},{"size":1629,"mtime":1610230112582,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"b2qh83",{"filePath":"96","messages":"97","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"99"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"99"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"99"},"/Users/dmitryshelomanov/mobile-fight/src/index.tsx",["209","210"],"/Users/dmitryshelomanov/mobile-fight/src/serviceWorker.ts",["211","212","213","214","215","216","217","218","219","220","221","222","223"],"// @ts-nocheck\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n",["224","225","226","227","228","229","230","231"],"/Users/dmitryshelomanov/mobile-fight/src/app.tsx",["232","233"],"/Users/dmitryshelomanov/mobile-fight/src/lib/histories.tsx",["234","235","236","237","238","239","240","241","242"],"/Users/dmitryshelomanov/mobile-fight/src/global-styles.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/lib/theme-context.tsx",["243","244","245"],"import React, { useState, useContext, createContext, useCallback } from \"react\"\nimport { DefaultTheme, ThemeProvider } from \"styled-components\"\n\nexport type ThemeControllerProps = {\n  children: React.ReactNode\n  initialTheme: string\n  themes: { [key: string]: DefaultTheme }\n}\n\nexport type ThemeSetterContextType = (theme: string) => void\n\nexport const ThemeSetterContext = createContext<ThemeSetterContextType | null>(\n  null,\n)\n\nexport function ThemeController({\n  children,\n  initialTheme,\n  themes,\n}: ThemeControllerProps) {\n  const [theme, setTheme] = useState<DefaultTheme>(themes[initialTheme])\n\n  const themeSetter = useCallback(\n    (themeName: string) => {\n      if (themes[themeName]) {\n        setTheme(themes[themeName])\n      }\n    },\n    [themes],\n  )\n\n  return (\n    <ThemeSetterContext.Provider value={themeSetter}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ThemeSetterContext.Provider>\n  )\n}\n\nexport function useThemeSetter() {\n  const setTheme = useContext(ThemeSetterContext)\n\n  return setTheme\n}\n","/Users/dmitryshelomanov/mobile-fight/src/lib/custom-navigation-behavior.tsx",["246","247","248","249","250"],"/Users/dmitryshelomanov/mobile-fight/src/ui/organisms/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/themes/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/pages/index.tsx",["251","252"],"/Users/dmitryshelomanov/mobile-fight/src/ui/themes/light.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/organisms/modal.tsx",["253","254","255"],"import React, {\n  createContext,\n  useEffect,\n  useState,\n  useContext,\n  useCallback,\n  useRef,\n} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport styled from \"styled-components\"\n\nexport const ModalUI = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #00000045;\n  z-index: 999;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const ModalContext = createContext<HTMLDivElement | null>(null)\n\nexport function ModalRootProvider({ children }: { children: React.ReactNode }) {\n  const elementRef = useRef<HTMLDivElement | null>(null)\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    setElement(elementRef.current)\n  }, [elementRef])\n\n  return (\n    <ModalContext.Provider value={element}>\n      <>\n        <div ref={elementRef} />\n        {children}\n      </>\n    </ModalContext.Provider>\n  )\n}\n\nexport function Modal({\n  children,\n  onOverlayClick,\n}: {\n  children?: React.ReactNode\n  onOverlayClick?: () => void\n}) {\n  const rootElement = useContext(ModalContext)\n\n  const handleClick = useCallback(() => {\n    if (onOverlayClick) {\n      onOverlayClick()\n    }\n  }, [onOverlayClick])\n\n  if (rootElement) {\n    return ReactDOM.createPortal(\n      <ModalUI onClick={handleClick}>{children}</ModalUI>,\n      rootElement,\n    )\n  }\n\n  return null\n}\n","/Users/dmitryshelomanov/mobile-fight/src/ui/organisms/menu.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/pages/chat/page.tsx",["256","257","258"],"import React, { useState, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { isHotkey } from \"is-hotkey\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { Message } from \"@features/chat\"\nimport { List } from \"@features/common\"\nimport { Button, Input, Footer, Timer } from \"@mobileFight/ui/atoms\"\nimport { useMemoryNavigator } from \"@lib/histories\"\n\nconst ChatWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  flex: 1 1 auto;\n`\n\nconst SendButton = styled(Button)`\n  align-self: center;\n  margin-top: 5px;\n  max-width: 100%;\n`\n\nconst Messages = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`\n\nconst MessageWrapper = styled(Message)`\n  margin-bottom: 7px !important;\n`\n\ntype Message = {\n  id: number\n  date: string\n  name: string\n  lvl: number\n  text: string\n}\n\nexport function ChatPage() {\n  const idRef = useRef(1)\n  const [messageValue, setMessageValue] = useState(\"\")\n  const [messagesStub, setMessages] = useState<Array<Message>>([])\n  const navigator = useMemoryNavigator()\n\n  function toBackLocation() {\n    navigator.toRootPage()\n  }\n\n  function changeMessage(event: React.ChangeEvent<HTMLInputElement>) {\n    setMessageValue(event.target.value)\n  }\n\n  function sendMessage() {\n    if (messageValue.trim().length > 0) {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        {\n          id: idRef.current++,\n          date: Date.now().toString(),\n          name: \"user1 (test)\",\n          lvl: 20,\n          text: messageValue,\n        },\n      ])\n\n      setMessageValue(\"\")\n    }\n  }\n\n  return (\n    <ArenaTemplate\n      footer={\n        <Footer\n          center={<Timer />}\n          right={\n            <Button minimal onClick={toBackLocation}>\n              Назад\n            </Button>\n          }\n        />\n      }\n    >\n      <ChatWrapper>\n        <Input\n          placeholder=\"Type here...\"\n          value={messageValue}\n          onChange={changeMessage}\n          onKeyDown={(event) => {\n            // @ts-ignore\n            if (isHotkey(\"Enter\", event)) {\n              sendMessage()\n            }\n          }}\n        />\n        <SendButton primary onClick={sendMessage}>\n          send\n        </SendButton>\n        <Messages>\n          <List\n            data={messagesStub}\n            extracKey={(it) => it.id.toString()}\n            renderRow={(message) => (\n              <MessageWrapper\n                date={message.date}\n                name={message.name}\n                lvl={message.lvl}\n                text={message.text}\n              />\n            )}\n          />\n        </Messages>\n      </ChatWrapper>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/duel/page.tsx",["259","260"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter } from \"@features/arena\"\nimport { List } from \"@features/common\"\nimport { H3, Button as ButtonUI } from \"@mobileFight/ui/atoms\"\n\nconst duels = [\"Начать поединок\", \"Открытый бой\", \"Текущие бои\"]\n\nconst Button = styled(ButtonUI)`\n  margin-bottom: 2px;\n  align-self: center;\n`\n\nexport function DuelPage() {\n  return (\n    <ArenaTemplate footer={<ArenaFooter isNested />}>\n      <>\n        <H3 center>-Дуэли-</H3>\n        <List\n          extracKey={(it) => it}\n          data={duels}\n          renderRow={(duel) => (\n            <Button primary key={duel}>\n              {duel}\n            </Button>\n          )}\n        />\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/market/page.tsx",["261","262"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter } from \"@features/arena\"\nimport { List } from \"@features/common\"\nimport { H3, Button as ButtonUI } from \"@mobileFight/ui/atoms\"\nimport { useRouterHistories, routePaths } from \"@lib/histories\"\n\nconst slots = [\"Оружие\", \"Броня\", \"Зелья и Свитки\"]\n\nconst Button = styled(ButtonUI)`\n  margin-bottom: 2px;\n  align-self: center;\n`\n\nexport function MarketPage() {\n  const { memory } = useRouterHistories()\n\n  return (\n    <ArenaTemplate footer={<ArenaFooter isNested />}>\n      <>\n        <H3 center>-Магазин-</H3>\n        <List\n          extracKey={(it) => it}\n          data={slots}\n          renderRow={(slot) => (\n            <Button\n              primary\n              onClick={() => {\n                memory.push(routePaths.products, { title: slot })\n              }}\n            >\n              {slot}\n            </Button>\n          )}\n        />\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/hunting/page.tsx",["263","264"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter, SimpleScroll } from \"@features/arena\"\nimport { List } from \"@features/common\"\nimport { H3, Separator, Button } from \"@mobileFight/ui/atoms\"\nimport mobPreview1 from \"@assets/hunting-preview/1.png\"\nimport mobPreview2 from \"@assets/hunting-preview/2.png\"\n\nconst mobs = [\n  { title: \"Гребняк\", lvl: 2, img: mobPreview1 },\n  { title: \"Разбойник\", lvl: 4, img: mobPreview2 },\n]\n\nconst MobsList = styled.ul`\n  margin: 0;\n  list-style: none;\n  padding: 0 15px;\n  flex: 1 1 auto;\n`\n\nconst MobItem = styled.li`\n  color: black;\n  font-size: 14px;\n  user-select: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n\n  > img {\n    width: 28px;\n    height: 28px;\n    margin-right: 10px;\n  }\n`\n\nconst CurrentFights = styled(Button)`\n  margin-top: 15px;\n  align-self: center;\n`\n\nexport function HuntingListPage() {\n  return (\n    <ArenaTemplate footer={<ArenaFooter isNested />}>\n      <>\n        <H3 center>-Охота-</H3>\n        <SimpleScroll>\n          <MobsList>\n            <List\n              data={mobs}\n              extracKey={(it) => it.title}\n              renderRow={(mob, index) => (\n                <>\n                  <MobItem>\n                    <img src={mob.img} alt=\"preview\" />\n                    {mob.title} [{mob.lvl}]\n                  </MobItem>\n                  {index < mobs.length - 1 && <Separator w=\"86%\" />}\n                </>\n              )}\n            />\n          </MobsList>\n        </SimpleScroll>\n        <CurrentFights primary>Текущие бои</CurrentFights>\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/join/login/page.tsx",["265","266"],"import React from \"react\"\n\nexport function LoginPage() {\n  return <div>LoginPage</div>\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/location/page.tsx",["267","268","269"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { QuestStates } from \"shared-types\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter, LocationPreview, SimpleScroll } from \"@features/arena\"\nimport { List } from \"@features/common\"\nimport { Button, spriteIcon, Separator } from \"@mobileFight/ui/atoms\"\nimport locationPreview from \"@assets/location.jpg\"\nimport { useMemoryNavigator, routePaths } from \"@lib/histories\"\n\nconst HuntingButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 96%;\n  margin-left: 2%;\n  margin-top: 5px;\n\n  > button {\n    width: 46%;\n  }\n`\n\nconst LocationsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  justify-content: center;\n`\n\nconst LocationItem = styled.li`\n  display: flex;\n  height: 30px;\n  align-items: center;\n  padding: 0 5px;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.hovered};\n  }\n`\n\nconst LocationBody = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin: 0 15px;\n  flex: 1 1 auto;\n\n  > ${LocationItem} {\n    margin-bottom: 10px;\n    user-select: none;\n    cursor: pointer;\n  }\n`\n\nconst LocationItemLeftIcon = styled.div`\n  margin-right: 15px;\n`\n\nconst QuestsCounter = styled.span<{ questType: QuestStates }>`\n  color: ${(props) => props.theme.colors.quests[props.questType]};\n`\n\nconst locations = [\n  \"Тракт\",\n  \"Забкое Ущелье\",\n  \"Поместьме Раввика\",\n  \"Слободка\",\n  \"Коллектор\",\n  \"Верхний Город\",\n]\n\nfunction renderQuestsCounter(counter: number, questType: QuestStates) {\n  return <QuestsCounter questType={questType}>{counter}</QuestsCounter>\n}\n\nexport function LocationPage() {\n  const navigation = useMemoryNavigator()\n\n  return (\n    <ArenaTemplate footer={<ArenaFooter />}>\n      <>\n        <LocationPreview\n          locationImage={locationPreview}\n          locationName=\"Школа Воинов\"\n        />\n        <HuntingButtonsWrapper>\n          <Button\n            primary\n            onClick={() => {\n              navigation.navigate(routePaths.hunting_list)\n            }}\n          >\n            Охота\n          </Button>\n          <Button\n            primary\n            onClick={() => {\n              navigation.navigate(routePaths.duels)\n            }}\n          >\n            Дуэли\n          </Button>\n        </HuntingButtonsWrapper>\n        <LocationsWrapper>\n          <SimpleScroll>\n            <LocationBody>\n              <LocationItem\n                onClick={() => {\n                  navigation.navigate(routePaths.quests)\n                }}\n              >\n                <LocationItemLeftIcon>\n                  <spriteIcon.component\n                    icon={spriteIcon.indexes.location.quest}\n                    type=\"location\"\n                  />\n                </LocationItemLeftIcon>\n                Задания ({renderQuestsCounter(1, QuestStates.active)}/\n                {renderQuestsCounter(2, QuestStates.available)}/\n                {renderQuestsCounter(0, QuestStates.completed)})\n              </LocationItem>\n              <Separator w=\"86%\" />\n              <List\n                extracKey={(it) => it}\n                data={locations}\n                renderRow={(location, index) => (\n                  <>\n                    <LocationItem>\n                      <LocationItemLeftIcon>\n                        <spriteIcon.component\n                          icon={spriteIcon.indexes.location.pointer}\n                          type=\"location\"\n                        />\n                      </LocationItemLeftIcon>\n                      {location}\n                    </LocationItem>\n                    {index < locations.length - 1 && <Separator w=\"86%\" />}\n                  </>\n                )}\n              />\n            </LocationBody>\n          </SimpleScroll>\n        </LocationsWrapper>\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/market/products/page.tsx",["270","271"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter } from \"@features/arena\"\nimport { H3, spriteIcon } from \"@mobileFight/ui/atoms\"\nimport { List } from \"@features/common\"\nimport weaponImage from \"@assets/weapon.png\"\n\nconst products = [\n  {\n    title: \"Крепкая дубина\",\n    price: 100,\n    lvl: 1,\n  },\n  {\n    title: \"Железный меч\",\n    price: 10,\n    lvl: 3,\n  },\n  {\n    title: \"Секира\",\n    price: 10,\n    lvl: 3,\n  },\n  {\n    title: \"Гнутый меч\",\n    price: 10,\n    lvl: 3,\n  },\n  {\n    title: \"Щит самоделка\",\n    price: 10,\n    lvl: 3,\n  },\n]\n\nconst ProductItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 0 5px;\n  border: 1px solid #b69c66;\n  padding: 18px 10px;\n  display: flex;\n  align-items: flex-start;\n  transition: 0.4s;\n  background-color: ${(props) => props.theme.colors.primaryLight};\n  margin-bottom: 5px;\n  user-select: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.hovered};\n  }\n\n  > img {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst ProductBody = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin: 0 15px;\n  flex: 1 1 auto;\n`\n\nconst Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  line-height: 25px;\n\n  > p {\n    margin: 0;\n  }\n`\n\nconst Price = styled.p`\n  display: flex;\n  align-items: center;\n\n  > [type=\"money\"] {\n    margin: 0 2px;\n  }\n`\n\nexport function ProductsPage() {\n  const silverIcon = (\n    <spriteIcon.component\n      icon={spriteIcon.indexes.money.silver}\n      type=\"money\"\n      inline\n    />\n  )\n\n  return (\n    <ArenaTemplate footer={<ArenaFooter isNested />}>\n      <>\n        <H3 center>-Оружие-</H3>\n        <ProductBody>\n          <List\n            extracKey={(it) => it.title}\n            data={products}\n            renderRow={(product) => (\n              <ProductItem>\n                <img src={weaponImage} alt=\"*\" />\n                <Description>\n                  <p>{product.title}</p>\n                  <p>Уроовень: {product.lvl}</p>\n                  <Price>\n                    Цена: {silverIcon} {product.lvl}\n                  </Price>\n                </Description>\n              </ProductItem>\n            )}\n          />\n        </ProductBody>\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/quests-list/page.tsx",["272","273"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { QuestStates } from \"shared-types\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter } from \"@features/arena\"\nimport { List } from \"@features/common\"\nimport { Separator, H3 } from \"@mobileFight/ui/atoms\"\n\nconst QuestsWrapper = styled.div`\n  margin: 15px 0;\n`\n\nconst QuestTypeTitle = styled.h3<{ questType: QuestStates }>`\n  margin: 0;\n  font-weight: 500;\n  font-size: 20px;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.colors.quests[props.questType]};\n\n  &:not(:first-child) {\n    margin-top: 20px;\n  }\n`\n\nconst QuestTitle = styled.p<{ questType: QuestStates }>`\n  padding: 0;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n  color: ${(props) => props.theme.colors.quests[props.questType]};\n`\n\nconst active = [\"Козенное имущество\", \"Наглые воришки\"]\n\nfunction renderQuest(questType: QuestStates) {\n  return (quest: string) => (\n    <React.Fragment key={quest}>\n      <QuestTitle questType={questType}>{quest}</QuestTitle>\n      <Separator w=\"100%\" />\n    </React.Fragment>\n  )\n}\n\nfunction keyExtractor(it: string) {\n  return it\n}\n\nexport function QuestsListPage() {\n  return (\n    <ArenaTemplate footer={<ArenaFooter menuItems={[]} isNested />}>\n      <>\n        <H3 center>-Задания-</H3>\n        <QuestsWrapper>\n          <QuestTypeTitle questType={QuestStates.active}>\n            Активные\n          </QuestTypeTitle>\n          <List\n            extracKey={keyExtractor}\n            data={active}\n            renderRow={renderQuest(QuestStates.active)}\n          />\n          <QuestTypeTitle questType={QuestStates.available}>\n            Доступные\n          </QuestTypeTitle>\n          <List\n            extracKey={keyExtractor}\n            data={active}\n            renderRow={renderQuest(QuestStates.available)}\n          />\n          <QuestTypeTitle questType={QuestStates.completed}>\n            Завершенные\n          </QuestTypeTitle>\n          <List\n            extracKey={keyExtractor}\n            data={active}\n            renderRow={renderQuest(QuestStates.completed)}\n          />\n        </QuestsWrapper>\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/pages/arena/equipment/page.tsx",["274","275","276"],"import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { EquipmentsScheme } from \"shared-types\"\nimport { ArenaTemplate } from \"@mobileFight/ui/templates\"\nimport { ArenaFooter } from \"@features/arena\"\nimport { H3, spriteIcon } from \"@mobileFight/ui/atoms\"\nimport { List } from \"@features/common\"\nimport { ifProp } from \"@lib/styled-component-layout\"\n\nconst equipments = [\n  {\n    isEquipped: true,\n    placeholder: \"Оружие\",\n    type: EquipmentsScheme.weapon,\n    info: {\n      title: \"Крепкая дубина\",\n      count: \"7\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.shield,\n    placeholder: \"Щит\",\n    info: {\n      title: \"Круглый щит\",\n      count: \"4\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.helmet,\n    placeholder: \"Шлем\",\n    info: {\n      title: \"Шлем Витаса\",\n      count: \"1\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.bracer,\n    placeholder: \"Наручи\",\n    info: {\n      title: \"Поручни Гладиолуса\",\n      count: \"4\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.armor,\n    placeholder: \"Броня\",\n    info: {\n      title: \"Кольца Витаса\",\n      count: \"4\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.footwear,\n    placeholder: \"Поножи\",\n    info: {\n      title: \"Шлепанцы Гладиолуса\",\n      count: \"1\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.suspension,\n    placeholder: \"Амулет\",\n    info: {\n      title: \"Подвеска Стажника\",\n      count: \"1\",\n    },\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.ring,\n    placeholder: \"Кольца\",\n    info: {\n      title: \"Бронекольцо\",\n      count: \"1\",\n    },\n  },\n  {\n    isEquipped: false,\n    type: EquipmentsScheme.belt,\n    placeholder: \"Пояс\",\n  },\n  {\n    isEquipped: true,\n    type: EquipmentsScheme.quests,\n    info: {\n      count: \"5\",\n      title: \"Для заданий\",\n    },\n  },\n]\n\nconst EquipmentItem = styled.li<{ isEmpty?: boolean }>`\n  display: flex;\n  align-items: center;\n  padding: 0 5px;\n  border: 1px solid ${(props) => props.theme.colors.primaryDark};\n  padding: 15px 20px;\n  display: flex;\n  align-items: flex-start;\n  transition: 0.4s;\n  background-color: ${(props) => props.theme.colors.primaryLight};\n  margin-bottom: 3px;\n  user-select: none;\n  cursor: pointer;\n  align-items: center;\n\n  > img {\n    width: 80px;\n    height: 80px;\n  }\n\n  > p {\n    margin: 0;\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.hovered};\n  }\n\n  ${ifProp(\n    \"isEmpty\",\n    css`\n      > p {\n        color: #706671;\n      }\n    `,\n  )}\n`\n\nconst EquipmentCount = styled.div`\n  font-weight: bold;\n  margin-right: 5px;\n`\n\nconst EquipmentBody = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin: 0 0px;\n  flex: 1 1 auto;\n`\n\nconst Icon = styled(spriteIcon.component)`\n  margin-right: 5px;\n`\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n\n  > p {\n    margin: 0;\n    padding: 10px 0px;\n  }\n`\n\nconst EquipmentStyle = styled.span`\n  font-weight: bold;\n`\n\nexport function HeroEquipmentPage() {\n  return (\n    <ArenaTemplate footer={<ArenaFooter isNested />}>\n      <>\n        <H3 center>-Снаряжение-</H3>\n        <Header>\n          <p>Снаряжение: 32/56</p>\n          <p>\n            Стиль: <EquipmentStyle>Нет</EquipmentStyle>\n          </p>\n        </Header>\n        <EquipmentBody>\n          <List\n            extracKey={(it) => it.type.toString()}\n            data={equipments}\n            renderRow={(equipment) => (\n              <EquipmentItem isEmpty={!equipment.isEquipped}>\n                <Icon\n                  icon={spriteIcon.indexes.equipment[equipment.type]}\n                  type=\"equipment\"\n                  inline\n                />\n                <EquipmentCount>{equipment?.info?.count || 0}</EquipmentCount>\n                <p>\n                  {equipment.isEquipped\n                    ? // @ts-ignore\n                      equipment.info.title\n                    : equipment.placeholder}\n                </p>\n              </EquipmentItem>\n            )}\n          />\n        </EquipmentBody>\n      </>\n    </ArenaTemplate>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/lib/styled-component-layout.tsx",["277","278","279","280","281","282","283"],"import { css } from \"styled-components\"\n\nexport type MixinProps = {\n  alignContent?:\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-around\"\n    | \"space-between\"\n    | \"stretch\"\n  align?: \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\"\n  basis?: number | string\n  grow?: number\n  shrink?: number\n  justify?:\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-around\"\n    | \"space-between\"\n    | \"space-evenly\"\n    | \"safe center\"\n    | \"unsafe center\"\n  order?: number\n  padding?: number | string\n  width?: number | string\n}\n\nexport const is = <T,>(value?: T): boolean => Boolean(value)\n\nexport const prop = (value?: string | number): string | number =>\n  is(value) ? value! : \"initial\"\n\n// TODO: need typings\nexport const ifProp = (name: string, ifStyles: any) => (props: any) =>\n  is(props[name]) && ifStyles\n\nexport const mixins = (props: MixinProps) => css`\n  align-content: ${prop(props.alignContent)};\n  align-items: ${prop(props.align)};\n  flex-basis: ${prop(props.basis)};\n  flex-grow: ${prop(props.grow)};\n  flex-shrink: ${prop(props.shrink)};\n  justify-content: ${prop(props.justify)};\n  order: ${prop(props.order)};\n  padding: ${prop(props.padding)};\n  width: ${prop(props.width)};\n`\n","/Users/dmitryshelomanov/mobile-fight/src/ui/templates/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/features/chat/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/features/arena/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/features/common/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/templates/main-template.tsx",["284","285"],"import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ArenaTemplateWrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  flex-direction: column;\n  position: relative;\n`\n\nconst ArenaTemplateInner = styled.div`\n  max-width: ${(props) => props.theme.screenSize.width}px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  overflow: scroll;\n  justify-content: center;\n`\n\nconst FooterWrapper = styled.div`\n  flex: 0 0 auto;\n  max-width: ${(props) => props.theme.screenSize.width}px;\n  width: 100vw;\n  align-self: center;\n`\n\nexport function ArenaTemplate({\n  children,\n  footer,\n}: {\n  children: React.ReactNode\n  footer: React.ReactNode\n}) {\n  return (\n    <ArenaTemplateWrapper>\n      <ContentWrapper>\n        <ArenaTemplateInner>{children}</ArenaTemplateInner>\n      </ContentWrapper>\n      {footer && <FooterWrapper>{footer}</FooterWrapper>}\n    </ArenaTemplateWrapper>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/ui/templates/container.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/button.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/timer.tsx",["286","287","288"],"import React, { useState, useEffect } from \"react\"\nimport moment from \"moment\"\n\nfunction formatTime() {\n  return moment().format(\"H:mm\")\n}\n\nconst interval = 60 * 1000\n\nexport function Timer(): JSX.Element {\n  const [time, setTime] = useState(formatTime())\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setTime(formatTime())\n    }, interval)\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [])\n\n  return <>{time}</>\n}\n","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/footer.tsx",["289","290"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport { Col, Row } from \"../templates/container\"\n\nexport const FooterWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 15px;\n  background-color: ${(props) => props.theme.colors.primaryDark};\n  color: white;\n  font-weight: 300;\n  user-select: none;\n`\n\nexport const Cell = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 15px;\n  background-color: ${(props) => props.theme.colors.primaryDark};\n`\n\nexport function Footer({\n  left,\n  center,\n  right,\n}: {\n  left?: React.ReactNode\n  center?: React.ReactNode\n  right?: React.ReactNode\n}) {\n  return (\n    <FooterWrapper>\n      <Row justify=\"space-between\" grow={1} shrink={1}>\n        <Col justify=\"center\" grow={1} shrink={1} align=\"flex-start\">\n          {left}\n        </Col>\n        <Col justify=\"center\" grow={1} shrink={1} align=\"center\">\n          {center}\n        </Col>\n        <Col justify=\"center\" grow={1} shrink={1} align=\"flex-end\">\n          {right}\n        </Col>\n      </Row>\n    </FooterWrapper>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/icons.tsx",["291","292","293"],"import styled, { css } from \"styled-components\"\nimport { EquipmentsScheme } from \"shared-types\"\nimport icons from \"@assets/sprites/icons.png\"\nimport { ifProp } from \"@lib/styled-component-layout\"\n\nconst indexes = {\n  money: {\n    copper: 3,\n    silver: 0,\n    gold: 1,\n    platinum: 2,\n  },\n  location: {\n    quest: 1,\n    pointer: 0,\n  },\n  equipment: {\n    [EquipmentsScheme.belt]: 0,\n    [EquipmentsScheme.armor]: 1,\n    [EquipmentsScheme.bracer]: 2,\n    [EquipmentsScheme.footwear]: 3,\n    [EquipmentsScheme.quests]: 4,\n    [EquipmentsScheme.helmet]: 5,\n    [EquipmentsScheme.weapon]: 6,\n    [EquipmentsScheme.shield]: 7,\n    [EquipmentsScheme.ring]: 8,\n    [EquipmentsScheme.suspension]: 9,\n  },\n}\n\nconst sizes = {\n  money: { size: 20, padding: 0 },\n  location: { size: 26, padding: 300 },\n  equipment: { size: 22, padding: 80 },\n}\n\nexport type IconsType = keyof typeof indexes\n\nexport type SpriteIconProps = {\n  icon: number\n  type: IconsType\n  inline?: boolean\n}\n\nexport function getIconSize(type: IconsType) {\n  return sizes[type].size\n}\n\nexport function getIconPadding(type: IconsType) {\n  return sizes[type].padding\n}\n\nexport function getIconPosition(icon: number, type: IconsType) {\n  return -icon * getIconSize(type) - getIconPadding(type)\n}\n\nconst SpriteIcon = styled.div<SpriteIconProps>`\n  width: ${(props) => getIconSize(props.type)}px;\n  height: ${(props) => getIconSize(props.type)}px;\n  background-image: url(${icons});\n  background-position-x: ${(props) =>\n    getIconPosition(props.icon, props.type)}px;\n  background-repeat: no-repeat;\n\n  ${ifProp(\n    \"inline\",\n    css`\n      display: inline-block;\n    `,\n  )}\n`\n\nexport const spriteIcon = {\n  indexes,\n  component: SpriteIcon,\n}\n","/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/titles.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/input.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/ui/atoms/separator.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/features/arena/organisms/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/features/chat/organisms/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/features/common/organisms/index.ts",[],"/Users/dmitryshelomanov/mobile-fight/src/features/arena/atoms/index.tsx",[],"/Users/dmitryshelomanov/mobile-fight/src/features/arena/organisms/footer.tsx",["294","295"],"import React, { useState } from \"react\"\nimport { Footer as FooterUI, Timer, Button } from \"@mobileFight/ui/atoms\"\nimport { Modal, MenuItem, MenuWrapper } from \"@mobileFight/ui/organisms\"\nimport { useMemoryNavigator, routePaths } from \"@lib/histories\"\n\nconst defaultItems = [\n  {\n    title: \"Магазин\",\n    to: routePaths.market,\n  },\n  {\n    title: \"Чат\",\n    to: routePaths.chat,\n  },\n  {\n    title: \"Снаряжение\",\n    to: routePaths.equipment,\n  },\n]\n\ntype Props = {\n  menuItems?: Array<{ title: string; to: string }>\n  isNested?: boolean\n}\n\nexport function ArenaFooter({ menuItems = defaultItems, isNested }: Props) {\n  const navigator = useMemoryNavigator()\n  const [isOpenMenu, toggleMenu] = useState(false)\n  const hasItems = menuItems.length > 0\n\n  function onCloseMenu() {\n    toggleMenu(false)\n  }\n\n  function onOpenMenu() {\n    toggleMenu(true)\n  }\n\n  function goBack() {\n    navigator.pop()\n  }\n\n  return (\n    <>\n      <FooterUI\n        left={\n          hasItems && (\n            <Button minimal onClick={onOpenMenu}>\n              Меню\n            </Button>\n          )\n        }\n        center={<Timer />}\n        right={\n          isNested ? (\n            <Button minimal onClick={goBack}>\n              Назад\n            </Button>\n          ) : (\n            \"Выход\"\n          )\n        }\n      />\n      {isOpenMenu && (\n        <Modal onOverlayClick={onCloseMenu}>\n          <MenuWrapper>\n            {menuItems.map((item) => (\n              <MenuItem\n                key={item.title}\n                onClick={() => {\n                  navigator.navigate(item.to)\n                }}\n              >\n                {item.title}\n              </MenuItem>\n            ))}\n          </MenuWrapper>\n        </Modal>\n      )}\n    </>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/features/arena/organisms/location-preview.tsx",["296","297"],"import React from \"react\"\nimport styled from \"styled-components\"\nimport frame from \"@assets/frame.png\"\nimport locationTitle from \"@assets/location-title.png\"\n\nconst PreviewWrapper = styled.div<{ locationImage: string }>`\n  position: relative;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: 38px 49px;\n  background-size: 438px;\n  background-image: url(${(props) => props.locationImage});\n\n  > img {\n    max-width: 100%;\n  }\n\n  > * {\n    user-select: none;\n  }\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nconst LocationName = styled.div`\n  width: 240px;\n  height: 58px;\n  background-image: url(${locationTitle});\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  font-weight: 500;\n`\n\nexport function LocationPreview({\n  locationImage,\n  locationName,\n}: {\n  locationImage: string\n  locationName?: string\n}) {\n  return (\n    <PreviewWrapper locationImage={locationImage}>\n      <img src={frame} alt=\"frame\" draggable={false} />\n      <Footer>\n        {locationName && <LocationName>{locationName}</LocationName>}\n      </Footer>\n    </PreviewWrapper>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/features/common/organisms/list.tsx",["298"],"import React from \"react\"\n\nexport function List<T>({\n  data,\n  renderRow,\n  renderEmpty,\n  extracKey,\n}: {\n  data: Array<T>\n  renderRow: (item: T, index: number) => JSX.Element\n  renderEmpty?: () => JSX.Element\n  extracKey: (arg0: T) => string\n}): JSX.Element | null {\n  if (data.length === 0 && renderEmpty) {\n    return renderEmpty()\n  }\n\n  if (data.length > 0) {\n    return (\n      <>\n        {data.map((it, index) => (\n          <React.Fragment key={extracKey(it)}>\n            {renderRow(it, index)}\n          </React.Fragment>\n        ))}\n      </>\n    )\n  }\n\n  return null\n}\n","/Users/dmitryshelomanov/mobile-fight/src/features/chat/organisms/message.tsx",["299","300"],"import React from \"react\"\nimport styled from \"styled-components\"\n\nconst MessageWrapper = styled.div`\n  color: ${(props) => props.theme.colors.third};\n  font-size: 15px;\n  display: block;\n  line-height: 20px;\n\n  > p {\n    display: inline-block;\n    margin: 0;\n  }\n`\n\nconst SendTime = styled.p`\n  color: black;\n  user-select: none;\n`\n\nconst Sender = styled.p`\n  color: black;\n  text-decoration: underline;\n  margin: 0 5px !important;\n  font-weight: 300;\n  cursor: pointer;\n`\n\nexport function Message({\n  date,\n  name,\n  lvl,\n  text,\n  className,\n}: {\n  date: string\n  name: string\n  lvl: number\n  text: string\n  className?: string\n}) {\n  return (\n    <MessageWrapper className={className}>\n      <SendTime>{date}</SendTime>\n      <Sender>\n        {name} [{lvl}]\n      </Sender>\n      {text}\n    </MessageWrapper>\n  )\n}\n","/Users/dmitryshelomanov/mobile-fight/src/features/arena/atoms/scroll.tsx",["301","302"],"import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport scrollBody from \"@assets/scroll-patterns/main/body.png\"\nimport scrollTailLeft from \"@assets/scroll-patterns/main/tail.png\"\nimport { ifProp } from \"@lib/styled-component-layout\"\n\nconst ScrollHead = styled.div`\n  background-image: url(${scrollBody});\n  background-size: 1px;\n  height: 17px;\n  width: 100%;\n  background-repeat-x: repeat;\n`\n\nconst ScrollTail = styled.div<{ right?: boolean }>`\n  background-image: url(${scrollTailLeft});\n  height: 17px;\n  width: 16px;\n\n  ${ifProp(\n    \"right\",\n    css`\n      transform: scale(-1, 1);\n    `,\n  )}\n`\n\nconst ScrollWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 0 1 auto;\n  width: 100%;\n`\n\nconst PlaneWrapper = styled.div<{ down?: boolean }>`\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: row;\n\n  ${ifProp(\n    \"down\",\n    css`\n      transform: scale(1, -1);\n    `,\n  )}\n`\n\nconst Body = styled.div`\n  display: flex;\n  background-color: ${(props) => props.theme.colors.primaryLight};\n  width: calc(100% - 28px);\n  align-self: center;\n  border: 1px solid ${(props) => props.theme.colors.primaryDark};\n  border-top-width: 0;\n  border-bottom-width: 0;\n  flex-direction: column;\n`\n\nfunction Plane({ down = false }: { down?: boolean }) {\n  return (\n    <PlaneWrapper down={down}>\n      <ScrollTail />\n      <ScrollHead />\n      <ScrollTail right />\n    </PlaneWrapper>\n  )\n}\n\nexport function SimpleScroll({ children }: { children?: React.ReactNode }) {\n  return (\n    <ScrollWrapper>\n      <Plane />\n      <Body>{children}</Body>\n      <Plane down />\n    </ScrollWrapper>\n  )\n}\n",{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"308","line":30,"column":3,"nodeType":"309","messageId":"310","endLine":30,"endColumn":16},{"ruleId":"307","severity":1,"message":"311","line":1,"column":1,"nodeType":"309","messageId":"310","endLine":1,"endColumn":15},{"ruleId":"312","severity":1,"message":"313","line":15,"column":1,"nodeType":"314","endLine":138,"endColumn":1},{"ruleId":"315","severity":1,"message":"316","line":21,"column":7,"nodeType":"317","endLine":21,"endColumn":63,"fix":"318"},{"ruleId":"319","severity":1,"message":"320","line":25,"column":8,"nodeType":"321","messageId":"322","endLine":25,"endColumn":33},{"ruleId":"319","severity":1,"message":"323","line":25,"column":26,"nodeType":"305","messageId":"324","endLine":25,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":46,"column":11,"nodeType":"327","messageId":"328","endLine":46,"endColumn":22},{"ruleId":"329","severity":1,"message":"330","line":63,"column":7,"nodeType":"305","messageId":"331","endLine":63,"endColumn":19},{"ruleId":"325","severity":1,"message":"326","line":74,"column":15,"nodeType":"327","messageId":"328","endLine":74,"endColumn":26},{"ruleId":"325","severity":1,"message":"326","line":87,"column":15,"nodeType":"327","messageId":"328","endLine":87,"endColumn":26},{"ruleId":"325","severity":1,"message":"326","line":99,"column":7,"nodeType":"327","messageId":"328","endLine":99,"endColumn":20},{"ruleId":"332","severity":1,"message":"333","line":110,"column":29,"nodeType":"317","messageId":"334","endLine":110,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":125,"column":7,"nodeType":"327","messageId":"328","endLine":125,"endColumn":18},{"ruleId":"319","severity":1,"message":"320","line":131,"column":8,"nodeType":"321","messageId":"322","endLine":131,"endColumn":29},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":13,"column":8,"nodeType":"321","messageId":"322","endLine":13,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"308","line":12,"column":1,"nodeType":"309","messageId":"310","endLine":12,"endColumn":14},{"ruleId":"319","severity":1,"message":"320","line":30,"column":8,"nodeType":"321","messageId":"322","endLine":30,"endColumn":37},{"ruleId":"319","severity":1,"message":"320","line":36,"column":8,"nodeType":"321","messageId":"322","endLine":36,"endColumn":36},{"ruleId":"319","severity":1,"message":"320","line":42,"column":8,"nodeType":"321","messageId":"322","endLine":42,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":54,"column":7,"nodeType":"327","messageId":"328","endLine":54,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":63,"column":5,"nodeType":"327","messageId":"328","endLine":63,"endColumn":16},{"ruleId":"325","severity":1,"message":"326","line":69,"column":5,"nodeType":"327","messageId":"328","endLine":69,"endColumn":16},{"ruleId":"319","severity":1,"message":"320","line":85,"column":8,"nodeType":"321","messageId":"322","endLine":89,"endColumn":10},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":16,"column":8,"nodeType":"321","messageId":"322","endLine":20,"endColumn":25},{"ruleId":"319","severity":1,"message":"320","line":39,"column":8,"nodeType":"321","messageId":"322","endLine":39,"endColumn":33},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":5,"column":12,"nodeType":"351","messageId":"322","endLine":5,"endColumn":38},{"ruleId":"319","severity":1,"message":"320","line":8,"column":12,"nodeType":"351","messageId":"322","endLine":8,"endColumn":52},{"ruleId":"319","severity":1,"message":"320","line":35,"column":8,"nodeType":"321","messageId":"322","endLine":41,"endColumn":3},{"ruleId":"319","severity":1,"message":"320","line":49,"column":8,"nodeType":"321","messageId":"322","endLine":49,"endColumn":47},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":18,"column":8,"nodeType":"321","messageId":"322","endLine":18,"endColumn":30},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":27,"column":8,"nodeType":"321","messageId":"322","endLine":27,"endColumn":79},{"ruleId":"319","severity":1,"message":"320","line":45,"column":8,"nodeType":"321","messageId":"322","endLine":51,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":42,"column":8,"nodeType":"321","messageId":"322","endLine":42,"endColumn":27},{"ruleId":"307","severity":1,"message":"308","line":92,"column":13,"nodeType":"309","messageId":"310","endLine":92,"endColumn":26},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":15,"column":8,"nodeType":"321","messageId":"322","endLine":15,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":16,"column":8,"nodeType":"321","messageId":"322","endLine":16,"endColumn":29},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":42,"column":8,"nodeType":"321","messageId":"322","endLine":42,"endColumn":34},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":28},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":77,"column":8,"nodeType":"321","messageId":"322","endLine":77,"endColumn":31},{"ruleId":"332","severity":1,"message":"352","line":120,"column":38,"nodeType":"317","messageId":"334","endLine":120,"endColumn":39},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":88,"column":8,"nodeType":"321","messageId":"322","endLine":88,"endColumn":31},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":48,"column":8,"nodeType":"321","messageId":"322","endLine":48,"endColumn":33},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":167,"column":8,"nodeType":"321","messageId":"322","endLine":167,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":192,"column":23,"nodeType":"309","messageId":"310","endLine":192,"endColumn":36},{"ruleId":"353","severity":1,"message":"354","line":32,"column":15,"nodeType":"355","messageId":"356","endLine":32,"endColumn":21},{"ruleId":"319","severity":1,"message":"357","line":35,"column":38,"nodeType":"305","messageId":"358","endLine":35,"endColumn":51},{"ruleId":"359","severity":1,"message":"360","line":35,"column":48,"nodeType":"361","messageId":"362","endLine":35,"endColumn":51,"suggestions":"363"},{"ruleId":"319","severity":1,"message":"320","line":35,"column":56,"nodeType":"351","messageId":"322","endLine":35,"endColumn":71},{"ruleId":"319","severity":1,"message":"364","line":35,"column":57,"nodeType":"305","messageId":"358","endLine":35,"endColumn":67},{"ruleId":"359","severity":1,"message":"360","line":35,"column":64,"nodeType":"361","messageId":"362","endLine":35,"endColumn":67,"suggestions":"365"},{"ruleId":"319","severity":1,"message":"320","line":38,"column":23,"nodeType":"351","messageId":"322","endLine":38,"endColumn":45},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":34,"column":8,"nodeType":"321","messageId":"322","endLine":40,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"332","severity":1,"message":"366","line":8,"column":18,"nodeType":"317","messageId":"334","endLine":8,"endColumn":20},{"ruleId":"332","severity":1,"message":"367","line":8,"column":23,"nodeType":"317","messageId":"334","endLine":8,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":22,"column":8,"nodeType":"321","messageId":"322","endLine":30,"endColumn":3},{"ruleId":"319","severity":1,"message":"320","line":45,"column":8,"nodeType":"321","messageId":"322","endLine":45,"endColumn":45},{"ruleId":"319","severity":1,"message":"320","line":49,"column":8,"nodeType":"321","messageId":"322","endLine":49,"endColumn":48},{"ruleId":"319","severity":1,"message":"320","line":53,"column":8,"nodeType":"321","messageId":"322","endLine":53,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":26,"column":8,"nodeType":"321","messageId":"322","endLine":26,"endColumn":75},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":41,"column":8,"nodeType":"321","messageId":"322","endLine":47,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":29,"column":8,"nodeType":"321","messageId":"322","endLine":41,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":69,"column":8,"nodeType":"321","messageId":"322","endLine":69,"endColumn":75},"no-use-before-define","'React' was used before it was defined.","Identifier","usedBeforeDefined","@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","Do not use \"@ts-nocheck\" because it alters compilation errors.","unicorn/filename-case","Filename is not in kebab case. Rename it to `service-worker.ts`.","Program","unicorn/regex-shorthand","Use regex shorthands to improve readability.","Literal",{"range":"368","text":"369"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","missingArgType","no-console","Unexpected console statement.","MemberExpression","unexpected","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp","no-magic-numbers","No magic number: 404.","noMagic","lines-around-directive",["370"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"jsx-a11y/label-has-for",[],"jsx-a11y/accessible-emoji",[],"jest/no-try-expect",["371"],"ArrowFunctionExpression","No magic number: 2.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","Argument 'ifStyles' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["372","373"],"Argument 'props' should be typed with a non-any type.",["374","375"],"No magic number: 60.","No magic number: 1000.",[851,907],"/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/","padding-line-between-statements","no-conditional-expect",{"messageId":"376","fix":"377","desc":"378"},{"messageId":"379","fix":"380","desc":"381"},{"messageId":"376","fix":"382","desc":"378"},{"messageId":"379","fix":"383","desc":"381"},"suggestUnknown",{"range":"384","text":"385"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"384","text":"386"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"387","text":"385"},{"range":"387","text":"386"},[801,804],"unknown","never",[817,820]]